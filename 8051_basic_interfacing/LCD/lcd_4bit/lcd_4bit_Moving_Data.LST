C51 COMPILER V9.50a   LCD_4BIT_MOVING_DATA                                                 03/20/2022 14:09:06 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE LCD_4BIT_MOVING_DATA
OBJECT MODULE PLACED IN lcd_4bit_Moving_Data.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE lcd_4bit_Moving_Data.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include<reg51.h>
   2          #define Data P2               //LCD data lines connected to port 1
   3          
   4          void lcd_init();
   5          void lcd_cmd(char cmd);
   6          void lcd_data(char d);
   7          void display(char *p);
   8          void delay(int t);
   9          
  10          sbit RS = P2^4;
  11          //sbit RW = P1^1;
  12          sbit EN = P2^5;
  13          
  14          void main(){
  15   1        lcd_init();
  16   1        //lcd_data('8');
  17   1        display("Embedded");
  18   1        lcd_cmd(0xC0);
  19   1        display("Technosolutions");
  20   1        delay(2);
  21   1        lcd_cmd(0x01);
  22   1        lcd_cmd(0x80);
  23   1        display("Shahid");
  24   1        lcd_cmd(0xC0);
  25   1        display("Hashmi");
  26   1        while(1)
  27   1        {
  28   2        lcd_cmd(0x1C);
  29   2        }
  30   1      }
  31          
  32          void lcd_init(){
  33   1        lcd_cmd(0x28);              //8-bit data mode -->     //For 4-bit data mode - 0x28
  34   1        lcd_cmd(0x01);              //Clear Display 
  35   1        lcd_cmd(0x0E);              //Display On and Cursor blinking -->      //For Cursor off - 0x0C ; for cursor On - 0x0
             -E
  36   1        lcd_cmd(0x06);              //Entry Mode
  37   1        lcd_cmd(0x80);              //First Line of LCD -->     //For 2nd line - 0xC0
  38   1      }
  39          
  40          void lcd_cmd(char cmd){
  41   1        Data = ((cmd>>4) & 0x0F);       //Send upper 4-bit command to Port where lcd is connected
  42   1        RS = 0;                     //RS 0 for commmand register
  43   1        //RW = 0;                     //Write operation
  44   1        EN = 1;                     //EN goes high to low to write data into lcd
  45   1        delay(10);
  46   1        EN = 0;
  47   1        delay(10);
  48   1        
  49   1        Data = (cmd & 0x0F);    //Send lower 4-bit command to Port where lcd is connected
  50   1        RS = 0;                     //RS 0 for commmand register
  51   1        //RW = 0;                     //Write operation
  52   1        EN = 1;                     //EN goes high to low to write data into lcd
  53   1        delay(10);
  54   1        EN = 0;
C51 COMPILER V9.50a   LCD_4BIT_MOVING_DATA                                                 03/20/2022 14:09:06 PAGE 2   

  55   1        delay(10);
  56   1      }
  57          
  58          void lcd_data(char d){
  59   1        Data = ((d>>4) & 0x0F);         //Send upper 4-bit data to Port where lcd is connected
  60   1        RS = 1;                     //RS 1 for data register
  61   1        //RW = 0;                     //Write operation
  62   1        EN = 1;                     //EN goes high to low to write data into lcd
  63   1        delay(10);
  64   1        EN = 0;
  65   1        delay(10);
  66   1        
  67   1        Data = (d & 0x0F);      //Send lower 4-bit data to Port where lcd is connected
  68   1        RS = 1;                     //RS 1 for data register
  69   1        //RW = 0;                     //Write operation
  70   1        EN = 1;                     //EN goes high to low to write data into lcd
  71   1        delay(10);
  72   1        EN = 0;
  73   1        delay(10);
  74   1      }
  75          
  76          void display(char *p){
  77   1        int i;
  78   1        for(i=0;*p!='\0';i++){
  79   2          lcd_data(*p++);
  80   2        }
  81   1      }
  82          
  83          void delay(int t){
  84   1        int i,j;
  85   1        for(i=0;i<=t;i++){
  86   2          for(j=0;j<=1275;j++);
  87   2        }
  88   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    276    ----
   CONSTANT SIZE    =     39    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
